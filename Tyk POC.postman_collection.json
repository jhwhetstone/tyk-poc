{
	"info": {
		"_postman_id": "ef5616be-007e-4321-af3f-e5931fb8467f",
		"name": "Tyk POC",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "SpringBoot OpenAPI REST API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8081/movies/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8081",
					"path": [
						"movies",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Graph QL API",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ExampleQuery {\n  books {\n    title\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:4000/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "4000",
					"path": [
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tyk Express REST API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/express-node-api/people",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"express-node-api",
						"people"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tyk Java REST API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/openapi/movies/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"openapi",
						"movies",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tyk GraphQL API",
			"request": {
				"auth": {
					"type": "oauth2",
					"oauth2": [
						{
							"key": "clientSecret",
							"value": "0ZLDcftlTGsmWpcyIABcq96tQS7rdFiE",
							"type": "string"
						},
						{
							"key": "clientId",
							"value": "graphql_api",
							"type": "string"
						},
						{
							"key": "tokenType",
							"value": "",
							"type": "string"
						},
						{
							"key": "accessToken",
							"value": "{{ACCESS_TOKEN}}",
							"type": "string"
						},
						{
							"key": "accessTokenUrl",
							"value": "http://localhost:8001/realms/tyk/protocol/openid-connect/token",
							"type": "string"
						},
						{
							"key": "client_authentication",
							"value": "body",
							"type": "string"
						},
						{
							"key": "tokenName",
							"value": "API 1",
							"type": "string"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "string"
						},
						{
							"key": "addTokenTo",
							"value": "header",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query ExampleQuery {\n  books {\n    title\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:8080/graph-api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"graph-api",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Express REST API",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3030/people",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3030",
					"path": [
						"people"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Token from Keycloak",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"[OpenCCC Token] expect access and refresh token in response\", function () {",
							"    pm.response.to.have.status(200);",
							"    var data = pm.response.json();",
							"    pm.expect(data.hasOwnProperty(\"ACCESS_TOKEN\"));",
							"    pm.expect(data.hasOwnProperty(\"REFRESH_TOKEN\"));",
							"    postman.setEnvironmentVariable(\"ACCESS_TOKEN\", data.access_token);",
							"    postman.setEnvironmentVariable(\"REFRESH_TOKEN\", data.refresh_token);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/x-www-form-urlencoded"
					}
				],
				"body": {
					"mode": "urlencoded",
					"urlencoded": [
						{
							"key": "client_id",
							"value": "graphql_api",
							"type": "text"
						},
						{
							"key": "grant_type",
							"value": "client_credentials",
							"type": "text"
						},
						{
							"key": "client_secret",
							"value": "0ZLDcftlTGsmWpcyIABcq96tQS7rdFiE",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://localhost:8001/realms/tyk/protocol/openid-connect/token",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"realms",
						"tyk",
						"protocol",
						"openid-connect",
						"token"
					]
				},
				"description": "Gets the OAuth2 token for the Helpdesk client and stores it in an environment variable"
			},
			"response": []
		},
		{
			"name": "OIDC Endpoints",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8001/realms/tyk/.well-known/openid-configuration",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8001",
					"path": [
						"realms",
						"tyk",
						".well-known",
						"openid-configuration"
					]
				}
			},
			"response": []
		}
	]
}